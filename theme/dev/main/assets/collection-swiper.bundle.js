(()=>{"use strict";var __webpack_modules__={70:()=>{eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*\r\n * @Date: 2022-11-24 10:07:30\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-09 10:41:22\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\collection-swiper.js\r\n */\nvar Slideshow2 = /*#__PURE__*/function () {\n  function Slideshow2(el) {\n    _classCallCheck(this, Slideshow2);\n\n    this.DOM = {\n      el: el\n    };\n    this.init();\n  }\n\n  _createClass(Slideshow2, [{\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      this.swiperImg = new Swiper(this.DOM.el.querySelector(\".slideshow-thumbnail-container\"), {\n        spaceBetween: 10,\n        loop: false,\n        slidesPerView: 'auto',\n        slidesPerGroup: 1,\n        freeMode: true,\n        watchSlidesProgress: true,\n        direction: \"horizontal\",\n        clickable: true,\n        breakpoints: {\n          750: {\n            direction: \"vertical\"\n          }\n        }\n      });\n      this.slideshow = new Swiper(document.querySelector('.slideshow22222'), {\n        speed: 500,\n        preloadImages: true,\n        updateOnImagesReady: true,\n        lazy: true,\n        effect: \"fade\",\n        initialSlide: 1,\n        scrollbar: {\n          el: '.swiper-scrollbar'\n        },\n        on: {\n          init: function init() {\n            self.animate('next');\n          }\n        },\n        thumbs: {\n          swiper: self.swiperImg\n        },\n        breakpoints: {\n          750: {\n            initialSlide: 0\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: \"initEvents\",\n    value: function initEvents() {\n      var _this = this;\n\n      this.slideshow.on('slideNextTransitionStart', function () {\n        return _this.animate('next');\n      });\n      this.slideshow.on('slidePrevTransitionStart', function () {\n        return _this.animate('prev');\n      });\n      var this_ = this;\n      setTimeout(function () {\n        $(\".slideshow-thumbnail\").each(function () {\n          $(this).on('mouseenter', function () {\n            var _$;\n\n            var index_ = ((_$ = $(this)) === null || _$ === void 0 ? void 0 : _$.index()) || 0;\n            this_.slideshow.slideTo(index_);\n          });\n        });\n      }, 200);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'next';\n      gsap.set(this.DOM.el.querySelectorAll(\".slide-content\"), {\n        opacity: 0\n      });\n      gsap.set(this.DOM.el.querySelectorAll(\".slide-info\"), {\n        opacity: 0\n      });\n      this.DOM.activeSlide = this.DOM.el.querySelector('.swiper-slide-active'), this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector('.slide-image'), this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector('.slide-content');\n      this.DOM.oldSlide = direction === \"next\" ? this.DOM.el.querySelector('.swiper-slide-prev') : this.DOM.el.querySelector('.swiper-slide-next');\n\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector('.slide-content');\n      }\n\n      gsap.to(this.DOM.activeSlideTitle, .5, {\n        ease: \"power1.out\",\n        startAt: {\n          y: '40px',\n          opacity: 0\n        },\n        y: '0%',\n        opacity: 1\n      });\n      gsap.to(this.DOM.activeSlideImg, 1.5, {\n        ease: \"expo.out\",\n        startAt: {\n          opacity: 1\n        },\n        x: 0\n      });\n      gsap.to(this.DOM.activeSlide.querySelector(\".slide-info\"), .5, {\n        ease: \"power1.out\",\n        startAt: {\n          y: '40px',\n          opacity: 0\n        },\n        y: '0%',\n        opacity: 1\n      });\n    }\n  }]);\n\n  return Slideshow2;\n}();\n\nnew Slideshow2(document.querySelector('.slideshow22222'));\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Slideshow2)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70\n")}},__webpack_exports__={};__webpack_modules__[70]()})();